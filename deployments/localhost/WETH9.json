{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "src",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "guy",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "wad",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "dst",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "wad",
          "type": "uint256"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "src",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "dst",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "wad",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "src",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "wad",
          "type": "uint256"
        }
      ],
      "name": "Withdrawal",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_guy",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_wad",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_dst",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_wad",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_src",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_dst",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_wad",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_wad",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x30a85dce25ad71585a5e3408173c219d2e0b55a0d2951d57d20184d9f10fbf9f",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "561729",
    "logsBloom": "0x
    "blockHash": "0x1baf995264cc3f6fd3b546281cf1b31754381c4898a20a8635daf8ac47be5e33",
    "transactionHash": "0x30a85dce25ad71585a5e3408173c219d2e0b55a0d2951d57d20184d9f10fbf9f",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "561729",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "afe0a13fb4545fb36ed029d51d030119",
  "metadata": "{\"compiler\":{\"version\":\"0.6.10+commit.00c0fcaf\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"src\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Withdrawal\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_guy\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_wad\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_dst\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_wad\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_src\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_dst\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_wad\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_wad\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Opyn Team\",\"details\":\"A wrapper to use ETH as collateral\",\"methods\":{\"approve(address,uint256)\":{\"params\":{\"_guy\":\"address to approve\",\"_wad\":\"amount of WETH\"},\"returns\":{\"_0\":\"True if tx succeeds, False if not\"}},\"totalSupply()\":{\"returns\":{\"_0\":\"total supply\"}},\"transfer(address,uint256)\":{\"params\":{\"_dst\":\"destination address\",\"_wad\":\"amount to transfer\"},\"returns\":{\"_0\":\"True if tx succeeds, False if not\"}},\"transferFrom(address,address,uint256)\":{\"params\":{\"_dst\":\"destination address\",\"_src\":\"source address\",\"_wad\":\"amount to transfer\"},\"returns\":{\"_0\":\"True if tx succeeds, False if not\"}},\"withdraw(uint256)\":{\"details\":\"Unwrap from WETH to ETH\",\"params\":{\"_wad\":\"amount WETH to unwrap and withdraw\"}}},\"title\":\"WETH contract\"},\"userdoc\":{\"methods\":{\"allowance(address,address)\":{\"notice\":\"mapping between addresses and allowance amount\"},\"approve(address,uint256)\":{\"notice\":\"approve transfer\"},\"balanceOf(address)\":{\"notice\":\"mapping between address and WETH balance\"},\"deposit()\":{\"notice\":\"wrap deposited ETH into WETH\"},\"totalSupply()\":{\"notice\":\"get ETH total supply\"},\"transfer(address,uint256)\":{\"notice\":\"transfer WETH\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"transfer from address\"},\"withdraw(uint256)\":{\"notice\":\"withdraw ETH from contract\"}}}},\"settings\":{\"compilationTarget\":{\"contracts/GammaProtocol/external/canonical-weth/WETH9.sol\":\"WETH9\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/GammaProtocol/external/canonical-weth/WETH9.sol\":{\"content\":\"// Copyright (C) 2015, 2016, 2017 Dapphub\\n\\n// This program is free software: you can redistribute it and/or modify\\n// it under the terms of the GNU General Public License as published by\\n// the Free Software Foundation, either version 3 of the License, or\\n// (at your option) any later version.\\n\\n// This program is distributed in the hope that it will be useful,\\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n// GNU General Public License for more details.\\n\\n// You should have received a copy of the GNU General Public License\\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\\n// SPDX-License-Identifier:  GNU GPL\\npragma solidity 0.6.10;\\n\\n/**\\n * @title WETH contract\\n * @author Opyn Team\\n * @dev A wrapper to use ETH as collateral\\n */\\ncontract WETH9 {\\n    string public name = \\\"Wrapped Ether\\\";\\n    string public symbol = \\\"WETH\\\";\\n    uint8 public decimals = 18;\\n\\n    /// @notice emits an event when a sender approves WETH\\n    event Approval(address indexed src, address indexed guy, uint256 wad);\\n    /// @notice emits an event when a sender transfers WETH\\n    event Transfer(address indexed src, address indexed dst, uint256 wad);\\n    /// @notice emits an event when a sender deposits ETH into this contract\\n    event Deposit(address indexed dst, uint256 wad);\\n    /// @notice emits an event when a sender withdraws ETH from this contract\\n    event Withdrawal(address indexed src, uint256 wad);\\n\\n    /// @notice mapping between address and WETH balance\\n    mapping(address => uint256) public balanceOf;\\n    /// @notice mapping between addresses and allowance amount\\n    mapping(address => mapping(address => uint256)) public allowance;\\n\\n    /**\\n     * @notice fallback function that receives ETH\\n     * @dev will get called in a tx with ETH\\n     */\\n    receive() external payable {\\n        deposit();\\n    }\\n\\n    /**\\n     * @notice wrap deposited ETH into WETH\\n     */\\n    function deposit() public payable {\\n        balanceOf[msg.sender] += msg.value;\\n        emit Deposit(msg.sender, msg.value);\\n    }\\n\\n    /**\\n     * @notice withdraw ETH from contract\\n     * @dev Unwrap from WETH to ETH\\n     * @param _wad amount WETH to unwrap and withdraw\\n     */\\n    function withdraw(uint256 _wad) public {\\n        require(balanceOf[msg.sender] >= _wad, \\\"WETH9: insufficient sender balance\\\");\\n        balanceOf[msg.sender] -= _wad;\\n        msg.sender.transfer(_wad);\\n        emit Withdrawal(msg.sender, _wad);\\n    }\\n\\n    /**\\n     * @notice get ETH total supply\\n     * @return total supply\\n     */\\n    function totalSupply() public view returns (uint256) {\\n        return address(this).balance;\\n    }\\n\\n    /**\\n     * @notice approve transfer\\n     * @param _guy address to approve\\n     * @param _wad amount of WETH\\n     * @return True if tx succeeds, False if not\\n     */\\n    function approve(address _guy, uint256 _wad) public returns (bool) {\\n        allowance[msg.sender][_guy] = _wad;\\n        emit Approval(msg.sender, _guy, _wad);\\n        return true;\\n    }\\n\\n    /**\\n     * @notice transfer WETH\\n     * @param _dst destination address\\n     * @param _wad amount to transfer\\n     * @return True if tx succeeds, False if not\\n     */\\n    function transfer(address _dst, uint256 _wad) public returns (bool) {\\n        return transferFrom(msg.sender, _dst, _wad);\\n    }\\n\\n    /**\\n     * @notice transfer from address\\n     * @param _src source address\\n     * @param _dst destination address\\n     * @param _wad amount to transfer\\n     * @return True if tx succeeds, False if not\\n     */\\n    function transferFrom(\\n        address _src,\\n        address _dst,\\n        uint256 _wad\\n    ) public returns (bool) {\\n        require(balanceOf[_src] >= _wad, \\\"WETH9: insufficient source balance\\\");\\n\\n        if (_src != msg.sender && allowance[_src][msg.sender] != uint256(-1)) {\\n            require(allowance[_src][msg.sender] >= _wad, \\\"WETH9: invalid allowance\\\");\\n            allowance[_src][msg.sender] -= _wad;\\n        }\\n\\n        balanceOf[_src] -= _wad;\\n        balanceOf[_dst] += _wad;\\n\\n        emit Transfer(_src, _dst, _wad);\\n\\n        return true;\\n    }\\n}\\n\",\"keccak256\":\"0x183bca8885cb2df4064f96f36e945befe33ee5c670c21a6b155de27ec0c613d0\",\"license\":\"GNU GPL\"}},\"version\":1}",
  "bytecode": "0x60c0604052600d60808190526c2bb930b83832b21022ba3432b960991b60a090815261002e916000919061007a565b50604080518082019091526004808252630ae8aa8960e31b602090920191825261005a9160019161007a565b506002805460ff1916601217905534801561007457600080fd5b50610115565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106100bb57805160ff19168380011785556100e8565b828001600101855582156100e8579182015b828111156100e85782518255916020019190600101906100cd565b506100f49291506100f8565b5090565b61011291905b808211156100f457600081556001016100fe565b90565b6107ea806101246000396000f3fe6080604052600436106100a05760003560e01c8063313ce56711610064578063313ce5671461021f57806370a082311461024a57806395d89b411461027d578063a9059cbb14610292578063d0e30db0146102cb578063dd62ed3e146102d3576100af565b806306fdde03146100b4578063095ea7b31461013e57806318160ddd1461018b57806323b872dd146101b25780632e1a7d4d146101f5576100af565b366100af576100ad61030e565b005b600080fd5b3480156100c057600080fd5b506100c961035d565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101035781810151838201526020016100eb565b50505050905090810190601f1680156101305780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561014a57600080fd5b506101776004803603604081101561016157600080fd5b506001600160a01b0381351690602001356103eb565b604080519115158252519081900360200190f35b34801561019757600080fd5b506101a0610451565b60408051918252519081900360200190f35b3480156101be57600080fd5b50610177600480360360608110156101d557600080fd5b506001600160a01b03813581169160208101359091169060400135610455565b34801561020157600080fd5b506100ad6004803603602081101561021857600080fd5b5035610603565b34801561022b57600080fd5b506102346106ca565b6040805160ff9092168252519081900360200190f35b34801561025657600080fd5b506101a06004803603602081101561026d57600080fd5b50356001600160a01b03166106d3565b34801561028957600080fd5b506100c96106e5565b34801561029e57600080fd5b50610177600480360360408110156102b557600080fd5b506001600160a01b03813516906020013561073f565b6100ad61030e565b3480156102df57600080fd5b506101a0600480360360408110156102f657600080fd5b506001600160a01b0381358116916020013516610753565b33600081815260036020908152604091829020805434908101909155825190815291517fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c9281900390910190a2565b6000805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156103e35780601f106103b8576101008083540402835291602001916103e3565b820191906000526020600020905b8154815290600101906020018083116103c657829003601f168201915b505050505081565b3360008181526004602090815260408083206001600160a01b038716808552908352818420869055815186815291519394909390927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925928290030190a350600192915050565b4790565b6001600160a01b0383166000908152600360205260408120548211156104ac5760405162461bcd60e51b81526004018080602001828103825260228152602001806107936022913960400191505060405180910390fd5b6001600160a01b03841633148015906104ea57506001600160a01b038416600090815260046020908152604080832033845290915290205460001914155b15610592576001600160a01b0384166000908152600460209081526040808320338452909152902054821115610567576040805162461bcd60e51b815260206004820152601860248201527f57455448393a20696e76616c696420616c6c6f77616e63650000000000000000604482015290519081900360640190fd5b6001600160a01b03841660009081526004602090815260408083203384529091529020805483900390555b6001600160a01b03808516600081815260036020908152604080832080548890039055938716808352918490208054870190558351868152935191937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929081900390910190a35060019392505050565b336000908152600360205260409020548111156106515760405162461bcd60e51b81526004018080602001828103825260228152602001806107716022913960400191505060405180910390fd5b33600081815260036020526040808220805485900390555183156108fc0291849190818181858888f19350505050158015610690573d6000803e3d6000fd5b5060408051828152905133917f7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b65919081900360200190a250565b60025460ff1681565b60036020526000908152604090205481565b60018054604080516020600284861615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156103e35780601f106103b8576101008083540402835291602001916103e3565b600061074c338484610455565b9392505050565b60046020908152600092835260408084209091529082529020548156fe57455448393a20696e73756666696369656e742073656e6465722062616c616e636557455448393a20696e73756666696369656e7420736f757263652062616c616e6365a2646970667358221220191a36c260840a0c576298e99faf3b420b66dae7ccfbc73854a7a58b5a8dd62364736f6c634300060a0033",
  "deployedBytecode": "0x6080604052600436106100a05760003560e01c8063313ce56711610064578063313ce5671461021f57806370a082311461024a57806395d89b411461027d578063a9059cbb14610292578063d0e30db0146102cb578063dd62ed3e146102d3576100af565b806306fdde03146100b4578063095ea7b31461013e57806318160ddd1461018b57806323b872dd146101b25780632e1a7d4d146101f5576100af565b366100af576100ad61030e565b005b600080fd5b3480156100c057600080fd5b506100c961035d565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101035781810151838201526020016100eb565b50505050905090810190601f1680156101305780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561014a57600080fd5b506101776004803603604081101561016157600080fd5b506001600160a01b0381351690602001356103eb565b604080519115158252519081900360200190f35b34801561019757600080fd5b506101a0610451565b60408051918252519081900360200190f35b3480156101be57600080fd5b50610177600480360360608110156101d557600080fd5b506001600160a01b03813581169160208101359091169060400135610455565b34801561020157600080fd5b506100ad6004803603602081101561021857600080fd5b5035610603565b34801561022b57600080fd5b506102346106ca565b6040805160ff9092168252519081900360200190f35b34801561025657600080fd5b506101a06004803603602081101561026d57600080fd5b50356001600160a01b03166106d3565b34801561028957600080fd5b506100c96106e5565b34801561029e57600080fd5b50610177600480360360408110156102b557600080fd5b506001600160a01b03813516906020013561073f565b6100ad61030e565b3480156102df57600080fd5b506101a0600480360360408110156102f657600080fd5b506001600160a01b0381358116916020013516610753565b33600081815260036020908152604091829020805434908101909155825190815291517fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c9281900390910190a2565b6000805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156103e35780601f106103b8576101008083540402835291602001916103e3565b820191906000526020600020905b8154815290600101906020018083116103c657829003601f168201915b505050505081565b3360008181526004602090815260408083206001600160a01b038716808552908352818420869055815186815291519394909390927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925928290030190a350600192915050565b4790565b6001600160a01b0383166000908152600360205260408120548211156104ac5760405162461bcd60e51b81526004018080602001828103825260228152602001806107936022913960400191505060405180910390fd5b6001600160a01b03841633148015906104ea57506001600160a01b038416600090815260046020908152604080832033845290915290205460001914155b15610592576001600160a01b0384166000908152600460209081526040808320338452909152902054821115610567576040805162461bcd60e51b815260206004820152601860248201527f57455448393a20696e76616c696420616c6c6f77616e63650000000000000000604482015290519081900360640190fd5b6001600160a01b03841660009081526004602090815260408083203384529091529020805483900390555b6001600160a01b03808516600081815260036020908152604080832080548890039055938716808352918490208054870190558351868152935191937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929081900390910190a35060019392505050565b336000908152600360205260409020548111156106515760405162461bcd60e51b81526004018080602001828103825260228152602001806107716022913960400191505060405180910390fd5b33600081815260036020526040808220805485900390555183156108fc0291849190818181858888f19350505050158015610690573d6000803e3d6000fd5b5060408051828152905133917f7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b65919081900360200190a250565b60025460ff1681565b60036020526000908152604090205481565b60018054604080516020600284861615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156103e35780601f106103b8576101008083540402835291602001916103e3565b600061074c338484610455565b9392505050565b60046020908152600092835260408084209091529082529020548156fe57455448393a20696e73756666696369656e742073656e6465722062616c616e636557455448393a20696e73756666696369656e7420736f757263652062616c616e6365a2646970667358221220191a36c260840a0c576298e99faf3b420b66dae7ccfbc73854a7a58b5a8dd62364736f6c634300060a0033",
  "devdoc": {
    "author": "Opyn Team",
    "details": "A wrapper to use ETH as collateral",
    "methods": {
      "approve(address,uint256)": {
        "params": {
          "_guy": "address to approve",
          "_wad": "amount of WETH"
        },
        "returns": {
          "_0": "True if tx succeeds, False if not"
        }
      },
      "totalSupply()": {
        "returns": {
          "_0": "total supply"
        }
      },
      "transfer(address,uint256)": {
        "params": {
          "_dst": "destination address",
          "_wad": "amount to transfer"
        },
        "returns": {
          "_0": "True if tx succeeds, False if not"
        }
      },
      "transferFrom(address,address,uint256)": {
        "params": {
          "_dst": "destination address",
          "_src": "source address",
          "_wad": "amount to transfer"
        },
        "returns": {
          "_0": "True if tx succeeds, False if not"
        }
      },
      "withdraw(uint256)": {
        "details": "Unwrap from WETH to ETH",
        "params": {
          "_wad": "amount WETH to unwrap and withdraw"
        }
      }
    },
    "title": "WETH contract"
  },
  "userdoc": {
    "methods": {
      "allowance(address,address)": {
        "notice": "mapping between addresses and allowance amount"
      },
      "approve(address,uint256)": {
        "notice": "approve transfer"
      },
      "balanceOf(address)": {
        "notice": "mapping between address and WETH balance"
      },
      "deposit()": {
        "notice": "wrap deposited ETH into WETH"
      },
      "totalSupply()": {
        "notice": "get ETH total supply"
      },
      "transfer(address,uint256)": {
        "notice": "transfer WETH"
      },
      "transferFrom(address,address,uint256)": {
        "notice": "transfer from address"
      },
      "withdraw(uint256)": {
        "notice": "withdraw ETH from contract"
      }
    }
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 8295,
        "contract": "contracts/GammaProtocol/external/canonical-weth/WETH9.sol:WETH9",
        "label": "name",
        "offset": 0,
        "slot": "0",
        "type": "t_string_storage"
      },
      {
        "astId": 8298,
        "contract": "contracts/GammaProtocol/external/canonical-weth/WETH9.sol:WETH9",
        "label": "symbol",
        "offset": 0,
        "slot": "1",
        "type": "t_string_storage"
      },
      {
        "astId": 8301,
        "contract": "contracts/GammaProtocol/external/canonical-weth/WETH9.sol:WETH9",
        "label": "decimals",
        "offset": 0,
        "slot": "2",
        "type": "t_uint8"
      },
      {
        "astId": 8338,
        "contract": "contracts/GammaProtocol/external/canonical-weth/WETH9.sol:WETH9",
        "label": "balanceOf",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 8345,
        "contract": "contracts/GammaProtocol/external/canonical-weth/WETH9.sol:WETH9",
        "label": "allowance",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  }
}